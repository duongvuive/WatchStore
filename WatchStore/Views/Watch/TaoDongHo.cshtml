@model WatchStore.Models.Watch

@{
    ViewBag.Title = "TaoDongHo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Thêm Mới</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Watch</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="form-group">
            @Html.LabelFor(model => model.NameWatch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameWatch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameWatch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDSupplier, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDSupplier", (IEnumerable<SelectListItem>)ViewBag.Supplier1, new {@class="form-control"})
                @Html.ValidationMessageFor(model => model.IDSupplier, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDBrand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDBrand", (IEnumerable<SelectListItem>)ViewBag.Brand, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDBrand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDOrigin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDOrigin", (IEnumerable<SelectListItem>)ViewBag.Origin, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDOrigin, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text" + "danger" })
                })
                <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                       style="display:none;" />
                <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />

            </div>
        </div>
        @section upload
     {
            <script>
            $(function () {
                $('#btnUpload').click(function () {
                    $('#fileUpload').trigger('click');
                });
            });
            $('#fileUpload').change(function () {
                if (window.FormData !== undefined) {
                    var fileUpload = $('#fileUpload').get(0);
                    var files = fileUpload.files;
                    var formData = new FormData();
                    formData.append('file', files[0]);
                    $.ajax(
                        {
                            type: 'POST',
                            url: '/Watch/ProcessUpload',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (urlImage) {
                                $('#pictureUpload').attr('src', urlImage);
                                $('#Image').val(urlImage);
                            },
                            error: function (err) {
                                alert('Error ', err.statusText);
                            }
                        });
                }
            });
            </script>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDProductFor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDProductFor", (IEnumerable<SelectListItem>)ViewBag.ProductFor, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDProductFor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
